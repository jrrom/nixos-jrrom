;;; pet-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from pet.el

(autoload 'pet-executable-find "pet" "\
Find the correct EXECUTABLE for the current Python project.

Search for EXECUTABLE first in the `pre-commit' virtualenv, then
whatever environment if found by `pet-virtualenv-root', then
`pyenv', then finally from the variable `exec-path'.

The executable will only be searched in an environment created by
a Python virtualenv management tool if the project is set up to
use it.

(fn EXECUTABLE)")
(autoload 'pet-virtualenv-root "pet" "\
Find the path to the virtualenv for the current Python project.

Selects a virtualenv in the follow order:

1. The value of the environment variable `VIRTUAL_ENV' if defined.
2. If the current project is using any `conda' variant, return the absolute path
   to the virtualenv directory for the current project.
3. Ditta for `poetry'.
4. Ditto for `pipenv'.
5. A directory in `pet-venv-dir-names' in the project root if found.
6. If the current project is using `pyenv', return the path to the virtualenv
   directory by looking up the prefix from `.python-version'.")
(autoload 'pet-flycheck-setup "pet" "\
Set up all `flycheck' Python checker configuration.")
(autoload 'pet-flycheck-teardown "pet" "\
Reset all `flycheck' Python checker configuration to default.")
(autoload 'pet-mode "pet" "\
Minor mode to set up buffer local variables for Python tools.

This is a minor mode.  If called interactively, toggle the `Pet mode'
mode.  If the prefix argument is positive, enable the mode, and if it is
zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable the
mode if ARG is nil, omitted, or is a positive number.  Disable the mode
if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate the variable `pet-mode'.

The mode's hook is called both when the mode is enabled and when it is
disabled.

(fn &optional ARG)" t)
(register-definition-prefixes "pet" '("pet-"))

;;; End of scraped data

(provide 'pet-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; pet-autoloads.el ends here
